from telebot.types import Message
from loader import bot
from telebot import types
from datetime import datetime
import gspread

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets
try:
    gc = gspread.service_account(filename='API_FILE')
    wks = gc.open("table_for_bot").sheet1
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets: {str(e)}")

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
first_button = types.KeyboardButton('üå§Ô∏è –ö–Ω–æ–ø–∫–∞ 1')
second_button = types.KeyboardButton('üíµ –ö–Ω–æ–ø–∫–∞ 2')
third_button = types.KeyboardButton('üè¨ –ö–Ω–æ–ø–∫–∞ 3')
fourth_button = types.KeyboardButton('üéÉ –ö–Ω–æ–ø–∫–∞ 4')
markup.add(first_button, second_button, third_button, fourth_button)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã
date_format = "%d.%m.%y"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_text(message: Message):
    if message.text == "/start" or message.text == 'üå§Ô∏è –ö–Ω–æ–ø–∫–∞ 1' or message.text == 'üíµ –ö–Ω–æ–ø–∫–∞ 2' or message.text == 'üè¨ –ö–Ω–æ–ø–∫–∞ 3' or message.text == 'üéÉ –ö–Ω–æ–ø–∫–∞ 4':
        handle_state(message)
    else:
        check_date(message)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π –±–æ—Ç–∞
def handle_state(message: Message):
    text = message.text
    if text == "/start":
        welcome(message)
    elif text == 'üå§Ô∏è –ö–Ω–æ–ø–∫–∞ 1':
        from handlers.default_handlers.button_1 import hello
        hello(message)
    elif text == 'üíµ –ö–Ω–æ–ø–∫–∞ 2':
        from handlers.default_handlers.button_2 import payment
        payment(message)
    elif text == 'üè¨ –ö–Ω–æ–ø–∫–∞ 3':
        from handlers.default_handlers.button_3 import show_image
        show_image(message)
    elif text == 'üéÉ –ö–Ω–æ–ø–∫–∞ 4':
        from handlers.default_handlers.button_4 import send_google_sheets
        send_google_sheets(message)
    else:
        bot.send_message('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã –∏ –∑–∞–ø–∏—Å—å –≤ Google Sheets
def check_date(message: Message):
    user_date = message.text
    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–¥.–º–º.–≥–≥
        datetime.strptime(user_date, date_format)
        
        last_row = len(wks.col_values(2))  
        next_row = last_row + 1
        
        # –ó–∞–ø–∏—Å—å –¥–∞—Ç—ã –≤ Google Sheets
        wks.update_cell(next_row, 2, user_date)
        bot.reply_to(message, "–î–∞—Ç–∞ –≤–µ—Ä–Ω–∞")
    except ValueError:
        bot.reply_to(message, "–î–∞—Ç–∞ –Ω–µ–≤–µ—Ä–Ω–∞")
    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞—Ç—ã: {str(e)}")  

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
def welcome(message: Message):
    print(f'{message.from_user.username} –í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é welcome')
    bot.send_message(message.chat.id, f'''–ü—Ä–∏–≤–µ—Ç {message.from_user.username}, 
—è –±–æ—Ç, –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ.''', reply_markup=markup)